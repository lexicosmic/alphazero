<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="967px" preserveAspectRatio="none" style="width:1892px;height:967px;background:#FFFFFF;" version="1.1" viewBox="0 0 1892 967" width="1892px" zoomAndPan="magnify"><defs/><g><!--MD5=[60d6b92408f98aed8df94d5c6e04aa63]
class State--><g id="elem_State"><rect codeLine="9" fill="#F1F1F1" height="211.6113" id="State" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="431" x="329.5" y="748.5"/><ellipse cx="524.75" cy="764.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M526.8438,771 L521.9375,771 L521.9375,769.625 L523.3594,769.3125 L523.3594,760.0313 L521.9375,759.6875 L521.9375,758.3281 L526.8438,758.3281 L526.8438,759.6875 L525.4219,760.0313 L525.4219,769.3125 L526.8438,769.625 L526.8438,771 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="32" x="545.25" y="769.932">State</text><line style="stroke:#181818;stroke-width:0.5;" x1="330.5" x2="759.5" y1="780.5" y2="780.5"/><ellipse cx="340.5" cy="795.534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="176" x="349.5" y="799.4659">getValidActions() : boolean[]</text><ellipse cx="340.5" cy="814.6019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="281" x="349.5" y="818.5339">getPlayerAt(position: number) : Player | null</text><ellipse cx="340.5" cy="833.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="208" x="349.5" y="837.6018">getEncodedState() : EncodedState</text><ellipse cx="340.5" cy="852.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="322" x="349.5" y="856.6697">setPlayerAt(player: Player, position: number) : void</text><ellipse cx="340.5" cy="871.8056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="78" x="349.5" y="875.7376">print() : void</text><ellipse cx="340.5" cy="890.8735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="215" x="349.5" y="894.8055">checkWin(action: Action) : boolean</text><ellipse cx="340.5" cy="909.9415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="319" x="349.5" y="913.8734">performAction(action: Action, player: Player) : void</text><ellipse cx="340.5" cy="929.0094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="405" x="349.5" y="932.9414">changePerspective(currentPlayer: Player, opponentPlayer) : void</text><ellipse cx="340.5" cy="948.0773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="165" x="349.5" y="952.0093">clone(state: State) : State</text></g><!--MD5=[b6dcce5e5ef3c84b0b048d11301373dd]
class Game--><g id="elem_Game"><rect codeLine="21" fill="#F1F1F1" height="135.3396" id="Game" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="486" x="828.5" y="786.5"/><ellipse cx="1049.25" cy="802.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1051.3438,809 L1046.4375,809 L1046.4375,807.625 L1047.8594,807.3125 L1047.8594,798.0313 L1046.4375,797.6875 L1046.4375,796.3281 L1051.3438,796.3281 L1051.3438,797.6875 L1049.9219,798.0313 L1049.9219,807.3125 L1051.3438,807.625 L1051.3438,809 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="36" x="1069.75" y="807.932">Game</text><line style="stroke:#181818;stroke-width:0.5;" x1="829.5" x2="1313.5" y1="818.5" y2="818.5"/><ellipse cx="839.5" cy="833.534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="152" x="848.5" y="837.4659">getActionSize() : number</text><ellipse cx="839.5" cy="852.6019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="142" x="848.5" y="856.5339">getInitialState() : State</text><ellipse cx="839.5" cy="871.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="226" x="848.5" y="875.6018">getOpponent(player: Player): Player</text><ellipse cx="839.5" cy="890.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="273" x="848.5" y="894.6697">getOpponentValue(value: number): number</text><ellipse cx="839.5" cy="909.8056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="460" x="848.5" y="913.7376">getActionOutcome(state: State, action: Action | null): ActionOutcome</text></g><!--MD5=[db57bbc7babbad0b035922935fd59e42]
class ResNet--><g id="elem_ResNet"><rect codeLine="31" fill="#F1F1F1" height="181.4754" id="ResNet" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="446" x="1382.5" y="763.5"/><ellipse cx="1577.25" cy="779.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1577.3594,775.0313 Q1576.4375,775.0313 1575.7031,775.3438 Q1574.9844,775.6563 1574.4844,776.25 Q1573.9844,776.8281 1573.7031,777.7031 Q1573.4375,778.5781 1573.4375,779.6719 Q1573.4375,781.1094 1573.875,782.1563 Q1574.3281,783.2031 1575.1719,783.75 Q1576.0313,784.2969 1577.3438,784.2969 Q1578.125,784.2969 1578.8125,784.1719 Q1579.5156,784.0313 1580.5156,783.7188 L1580.5156,785.5938 Q1579.6563,785.9219 1578.8906,786.0469 Q1578.1406,786.1719 1577.125,786.1719 Q1575.2031,786.1719 1573.8906,785.375 Q1572.5938,784.5625 1571.9375,783.0938 Q1571.2813,781.6094 1571.2813,779.6406 Q1571.2813,778.2188 1571.6719,777.0469 Q1572.0781,775.8594 1572.8594,774.9844 Q1573.6406,774.1094 1574.7813,773.6406 Q1575.9219,773.1563 1577.3906,773.1563 Q1578.3438,773.1563 1579.2344,773.3594 Q1580.1406,773.5469 1581.0781,774.0156 L1580.25,775.7969 Q1579.4688,775.4219 1578.8125,775.2344 Q1578.1563,775.0313 1577.3594,775.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="48" x="1597.75" y="784.932">ResNet</text><line style="stroke:#181818;stroke-width:0.5;" x1="1383.5" x2="1827.5" y1="795.5" y2="795.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1390.5" y="807.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="1402.5" y="814.4659">model : tf.LayersModel</text><line style="stroke:#181818;stroke-width:0.5;" x1="1383.5" x2="1827.5" y1="822.5679" y2="822.5679"/><ellipse cx="1393.5" cy="837.6019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="1402.5" y="841.5339">save(path: string) : void</text><ellipse cx="1393.5" cy="856.6698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="111" x="1402.5" y="860.6018">summary() : void</text><ellipse cx="1393.5" cy="875.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="1402.5" y="879.6697">dispose() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1390.5" y="891.8056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="1402.5" y="898.7376">compile(learningRate: number) : void</text><ellipse cx="1393.5" cy="913.8735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="351" x="1402.5" y="917.8055">train(trainResNetParams: TrainResNetParams) : void</text><ellipse cx="1393.5" cy="932.9415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="420" x="1402.5" y="936.8734">predict(encodedState: tf.Tensor4D) : [tf.Tensor2D, tf.Tensor2D]</text></g><!--MD5=[e32708419c7dccbd301426c945744615]
class MonteCarloTreeSearch--><g id="elem_MonteCarloTreeSearch"><rect codeLine="41" fill="#F1F1F1" height="124.2717" id="MonteCarloTreeSearch" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="230" x="1258.5" y="415.5"/><ellipse cx="1293.3" cy="431.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1293.4094,427.0313 Q1292.4875,427.0313 1291.7531,427.3438 Q1291.0344,427.6563 1290.5344,428.25 Q1290.0344,428.8281 1289.7531,429.7031 Q1289.4875,430.5781 1289.4875,431.6719 Q1289.4875,433.1094 1289.925,434.1563 Q1290.3781,435.2031 1291.2219,435.75 Q1292.0813,436.2969 1293.3938,436.2969 Q1294.175,436.2969 1294.8625,436.1719 Q1295.5656,436.0313 1296.5656,435.7188 L1296.5656,437.5938 Q1295.7063,437.9219 1294.9406,438.0469 Q1294.1906,438.1719 1293.175,438.1719 Q1291.2531,438.1719 1289.9406,437.375 Q1288.6438,436.5625 1287.9875,435.0938 Q1287.3313,433.6094 1287.3313,431.6406 Q1287.3313,430.2188 1287.7219,429.0469 Q1288.1281,427.8594 1288.9094,426.9844 Q1289.6906,426.1094 1290.8313,425.6406 Q1291.9719,425.1563 1293.4406,425.1563 Q1294.3938,425.1563 1295.2844,425.3594 Q1296.1906,425.5469 1297.1281,426.0156 L1296.3,427.7969 Q1295.5188,427.4219 1294.8625,427.2344 Q1294.2063,427.0313 1293.4094,427.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1311.7" y="436.932">MonteCarloTreeSearch</text><line style="stroke:#181818;stroke-width:0.5;" x1="1259.5" x2="1487.5" y1="447.5" y2="447.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1266.5" y="459.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="1278.5" y="466.4659">game : Game</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1266.5" y="478.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="1278.5" y="485.5339">resNet : ResNet</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1266.5" y="497.6698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="1278.5" y="504.6018">params : MCTSParams</text><line style="stroke:#181818;stroke-width:0.5;" x1="1259.5" x2="1487.5" y1="512.7038" y2="512.7038"/><ellipse cx="1269.5" cy="527.7377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="1278.5" y="531.6697">search(state: State) : number[]</text></g><!--MD5=[7ff613315badeed87e92485c9536b1fb]
class AlphaZero--><g id="elem_AlphaZero"><rect codeLine="75" fill="#F1F1F1" height="200.5433" id="AlphaZero" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1025" x="860.5" y="7"/><ellipse cx="1334.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1334.3594,18.5313 Q1333.4375,18.5313 1332.7031,18.8438 Q1331.9844,19.1563 1331.4844,19.75 Q1330.9844,20.3281 1330.7031,21.2031 Q1330.4375,22.0781 1330.4375,23.1719 Q1330.4375,24.6094 1330.875,25.6563 Q1331.3281,26.7031 1332.1719,27.25 Q1333.0313,27.7969 1334.3438,27.7969 Q1335.125,27.7969 1335.8125,27.6719 Q1336.5156,27.5313 1337.5156,27.2188 L1337.5156,29.0938 Q1336.6563,29.4219 1335.8906,29.5469 Q1335.1406,29.6719 1334.125,29.6719 Q1332.2031,29.6719 1330.8906,28.875 Q1329.5938,28.0625 1328.9375,26.5938 Q1328.2813,25.1094 1328.2813,23.1406 Q1328.2813,21.7188 1328.6719,20.5469 Q1329.0781,19.3594 1329.8594,18.4844 Q1330.6406,17.6094 1331.7813,17.1406 Q1332.9219,16.6563 1334.3906,16.6563 Q1335.3438,16.6563 1336.2344,16.8594 Q1337.1406,17.0469 1338.0781,17.5156 L1337.25,19.2969 Q1336.4688,18.9219 1335.8125,18.7344 Q1335.1563,18.5313 1334.3594,18.5313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="1354.75" y="28.432">AlphaZero</text><line style="stroke:#181818;stroke-width:0.5;" x1="861.5" x2="1884.5" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="868.5" y="51.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="880.5" y="57.9659">game : Game</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="868.5" y="70.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="880.5" y="77.0339">resNet : ResNet</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="868.5" y="89.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="198" x="880.5" y="96.1018">mcts : MonteCarloTreeSearch</text><line style="stroke:#181818;stroke-width:0.5;" x1="861.5" x2="1884.5" y1="104.2038" y2="104.2038"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="868.5" y="116.2377"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="880.5" y="123.1697">selfPlay() : TrainingMemory</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="868.5" y="135.3056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="698" x="880.5" y="142.2376">transposeMemory() : {encodedStates: EncodedState[], policyTargets: number[], valueTargets: number[]}</text><ellipse cx="871.5" cy="157.3735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="489" x="880.5" y="161.3055">buildTrainingMemory(numSelfPlayIterations: number) : TrainingMemory</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="868.5" y="173.4415"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="723" x="880.5" y="180.3734">train(memory: TrainingMemory, batchSize: number, numEpochs: number, learningRate: number) : tf.Logs[]</text><ellipse cx="871.5" cy="195.5094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="999" x="880.5" y="199.4414">learn(directoryName: string, numSelfPlayIterations: number, trainModelParams: TrainModelParams, trainingMemoryArray: TrainingMemory[]) : void</text></g><!--MD5=[8f3aa74cb20ddceaeea09384729388c2]
class MonteCarloNode--><g id="elem_MonteCarloNode"><rect codeLine="51" fill="#F1F1F1" height="391.2225" id="MonteCarloNode" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="338" x="584.5" y="282.5"/><ellipse cx="692.25" cy="298.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M692.3594,294.0313 Q691.4375,294.0313 690.7031,294.3438 Q689.9844,294.6563 689.4844,295.25 Q688.9844,295.8281 688.7031,296.7031 Q688.4375,297.5781 688.4375,298.6719 Q688.4375,300.1094 688.875,301.1563 Q689.3281,302.2031 690.1719,302.75 Q691.0313,303.2969 692.3438,303.2969 Q693.125,303.2969 693.8125,303.1719 Q694.5156,303.0313 695.5156,302.7188 L695.5156,304.5938 Q694.6563,304.9219 693.8906,305.0469 Q693.1406,305.1719 692.125,305.1719 Q690.2031,305.1719 688.8906,304.375 Q687.5938,303.5625 686.9375,302.0938 Q686.2813,300.6094 686.2813,298.6406 Q686.2813,297.2188 686.6719,296.0469 Q687.0781,294.8594 687.8594,293.9844 Q688.6406,293.1094 689.7813,292.6406 Q690.9219,292.1563 692.3906,292.1563 Q693.3438,292.1563 694.2344,292.3594 Q695.1406,292.5469 696.0781,293.0156 L695.25,294.7969 Q694.4688,294.4219 693.8125,294.2344 Q693.1563,294.0313 692.3594,294.0313 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="712.75" y="303.932">MonteCarloNode</text><line style="stroke:#181818;stroke-width:0.5;" x1="585.5" x2="921.5" y1="314.5" y2="314.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="592.5" y="326.534"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="604.5" y="333.4659">game : Game</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="592.5" y="345.6019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="604.5" y="352.5339">params : MCTSParams</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="592.5" y="364.6698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="604.5" y="371.6018">state : State</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="592.5" y="383.7377"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="604.5" y="390.6697">actionTaken : Action | null</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="592.5" y="402.8056"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="604.5" y="409.7376">priorProbability : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="592.5" y="421.8735"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="604.5" y="428.8055">visitCount : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="592.5" y="440.9415"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="604.5" y="447.8734">valueSum : number</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="592.5" y="460.0094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="604.5" y="466.9414">parent : MonteCarloNode | null</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="592.5" y="479.0773"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="604.5" y="486.0093">children : MonteCarloNode[]</text><line style="stroke:#181818;stroke-width:0.5;" x1="585.5" x2="921.5" y1="494.1113" y2="494.1113"/><ellipse cx="595.5" cy="509.1452" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="110" x="604.5" y="513.0772">getState() : State</text><ellipse cx="595.5" cy="528.2131" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="604.5" y="532.1451">getActionTaken() : Action | null</text><ellipse cx="595.5" cy="547.281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="604.5" y="551.213">getChildren() : MonteCarloNode[]</text><ellipse cx="595.5" cy="566.349" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="604.5" y="570.2809">getVisitCount() : number</text><ellipse cx="595.5" cy="585.4169" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="604.5" y="589.3489">isFullyExpanded() : boolean</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="592.5" y="601.4848"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="312" x="604.5" y="608.4168">getChildUcb(child: MonteCarloNode) : number</text><ellipse cx="595.5" cy="623.5527" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="237" x="604.5" y="627.4847">selectBestChild() : MonteCarloNode</text><ellipse cx="595.5" cy="642.6206" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="604.5" y="646.5526">expand(policy: number[]) : void</text><ellipse cx="595.5" cy="661.6885" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="306" x="604.5" y="665.6205">backpropagate(outcomeValue: number) : void</text></g><!--MD5=[d565684795d6bfea09a84e5c5a6a817f]
class TypeDefinitions--><g id="elem_TypeDefinitions"><rect codeLine="90" fill="#F1F1F1" height="116.2717" id="TypeDefinitions" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="271" x="7" y="49"/><ellipse cx="85.75" cy="65" fill="#E3664A" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M92.8281,64.1719 Q92.8281,64.9844 92.6406,65.7656 Q92.4531,66.5469 92.0469,67.2031 Q91.6563,67.8438 91.0469,68.25 Q90.4531,68.6406 89.625,68.6406 Q88.7344,68.6406 88.2031,68.125 Q87.6875,67.6094 87.75,67.0156 L87.8438,67.0469 Q87.6563,67.7031 86.9844,68.1719 Q86.3281,68.6406 85.3594,68.6406 Q83.9375,68.6406 83.1563,67.6875 Q82.3906,66.7344 82.3906,65.2188 Q82.3906,64.0313 82.8594,63.1094 Q83.3281,62.1875 84.2031,61.6563 Q85.0781,61.125 86.25,61.125 Q87.0313,61.125 87.7656,61.2656 Q88.5156,61.4063 89.1406,61.6094 L88.9531,65.2656 Q88.9375,65.5625 88.9375,65.6875 Q88.9375,65.8125 88.9375,65.8594 Q88.9375,66.6406 89.1719,66.8594 Q89.4063,67.0625 89.7188,67.0625 Q90.125,67.0625 90.4375,66.7031 Q90.75,66.3281 90.9219,65.6563 Q91.1094,64.9844 91.1094,64.1406 Q91.1094,62.6406 90.5,61.6094 Q89.9063,60.5781 88.8594,60.0313 Q87.8125,59.4844 86.4531,59.4844 Q85.0625,59.4844 83.9844,59.9219 Q82.9219,60.3594 82.2031,61.1563 Q81.4844,61.9375 81.1094,63.0313 Q80.7344,64.1094 80.7344,65.4219 Q80.7344,67.0313 81.2969,68.125 Q81.875,69.2188 82.9375,69.7969 Q84.0156,70.3594 85.625,70.3594 Q86.625,70.3594 87.5469,70.1406 Q88.4688,69.9219 89.5469,69.5 L89.5469,71.2188 Q88.625,71.6094 87.6875,71.8125 Q86.7656,72.0156 85.625,72.0156 Q83.5625,72.0156 82.0625,71.2344 Q80.5781,70.4531 79.7813,68.9844 Q78.9844,67.5156 78.9844,65.4688 Q78.9844,63.8438 79.4844,62.4531 Q80,61.0469 80.9688,60.0156 Q81.9531,58.9844 83.3438,58.4063 Q84.7344,57.8281 86.4531,57.8281 Q87.8281,57.8281 88.9844,58.2656 Q90.1563,58.6875 91.0156,59.5313 Q91.875,60.3594 92.3438,61.5313 Q92.8281,62.7031 92.8281,64.1719 Z M84.25,65.25 Q84.25,66.25 84.6094,66.6563 Q84.9688,67.0625 85.5781,67.0625 Q86.375,67.0625 86.7344,66.4531 Q87.0938,65.8281 87.1563,64.75 L87.25,62.8281 Q87.25,62.8281 86.9219,62.7813 Q86.6094,62.7344 86.2656,62.7344 Q85.5313,62.7344 85.0781,63.0938 Q84.6406,63.4375 84.4375,64.0313 Q84.25,64.6094 84.25,65.25 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="106.25" y="70.432">TypeDefinitions</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="277" y1="81" y2="81"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="13" y="99.9659">EncodedState : number[][][]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="108" x="13" y="119.0339">Action : number</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="13" y="138.1018">ValidAction : boolean</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="259" x="13" y="157.1697">TrainingMemory : TrainMemoryBlock[]</text></g><!--MD5=[2cb47ba637a0d19583e6199456f6ad0b]
class Player--><g id="elem_Player"><rect codeLine="97" fill="#F1F1F1" height="97.2038" id="Player" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="73" x="298" y="58.5"/><ellipse cx="313" cy="74.5" fill="#EB937F" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M316.4688,81 L309.1563,81 L309.1563,68.3281 L316.4688,68.3281 L316.4688,70.2031 L311.2031,70.2031 L311.2031,73.4688 L316.1563,73.4688 L316.1563,75.3281 L311.2031,75.3281 L311.2031,79.125 L316.4688,79.125 L316.4688,81 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="327" y="79.932">Player</text><line style="stroke:#181818;stroke-width:0.5;" x1="299" x2="370" y1="90.5" y2="90.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="304" y="109.4659">None = 0</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="304" y="128.5339">X = 1</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="40" x="304" y="147.6018">O = -1</text></g><!--MD5=[c922ac116bade2f03a8918addb4c1321]
class ActionOutcome--><g id="elem_ActionOutcome"><rect codeLine="103" fill="#F1F1F1" height="91.5479" id="ActionOutcome" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="173" x="626" y="61"/><ellipse cx="658.1" cy="83.706" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M662.6625,86.6904 Q662.6625,87.8623 662.0844,88.6904 Q661.5219,89.5185 660.475,89.956 Q659.4438,90.3779 658.0688,90.3779 Q657.3656,90.3779 656.725,90.2998 Q656.1,90.2373 655.5688,90.1123 Q655.0375,89.9716 654.4594,89.706 L654.4594,87.6591 Q655.4438,88.0966 656.3188,88.3154 Q657.1938,88.5185 658.1313,88.5185 Q658.9906,88.5185 659.5375,88.3154 Q660.0844,88.0966 660.3344,87.7216 Q660.6,87.3466 660.6,86.831 Q660.6,86.3154 660.3813,85.9716 Q660.1781,85.6279 659.5844,85.2998 Q659.0063,84.9716 657.9125,84.581 Q657.1156,84.2685 656.4906,83.9404 Q655.8813,83.5966 655.4594,83.1435 Q655.0375,82.6748 654.8188,82.081 Q654.6156,81.4873 654.6156,80.7216 Q654.6156,79.6748 655.1469,78.9248 Q655.6938,78.1591 656.6313,77.7685 Q657.5688,77.3623 658.7563,77.3623 Q659.8031,77.3623 660.6469,77.5654 Q661.5063,77.7529 662.4438,78.1748 L661.7875,79.9873 Q660.9125,79.5966 660.1938,79.4248 Q659.4906,79.2373 658.725,79.2373 Q658.0219,79.2373 657.5688,79.4404 Q657.1313,79.6279 656.9125,79.9716 Q656.6938,80.2998 656.6938,80.7373 Q656.6938,81.2841 656.9125,81.6279 Q657.1313,81.9716 657.6625,82.2841 Q658.2094,82.581 659.1781,82.9404 Q660.2719,83.3466 661.0375,83.831 Q661.8188,84.2998 662.2406,84.9873 Q662.6625,85.6591 662.6625,86.6904 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="37" x="708.9" y="78.8281">«Type»</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="675.9" y="97.31">ActionOutcome</text><line style="stroke:#181818;stroke-width:0.5;" x1="627" x2="798" y1="106.412" y2="106.412"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="632" y="125.378">isTerminal : boolean</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="632" y="144.4459">outcomeValue : number</text></g><!--MD5=[6aa0147a14f38ac838ee2e013f5cdf8a]
class TrainResNetParams--><g id="elem_TrainResNetParams"><rect codeLine="108" fill="#F1F1F1" height="186.8874" id="TrainResNetParams" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="234" x="25.5" y="384"/><ellipse cx="71.75" cy="406.706" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M76.3125,409.6904 Q76.3125,410.8623 75.7344,411.6904 Q75.1719,412.5185 74.125,412.956 Q73.0938,413.3779 71.7188,413.3779 Q71.0156,413.3779 70.375,413.2998 Q69.75,413.2373 69.2188,413.1123 Q68.6875,412.9716 68.1094,412.706 L68.1094,410.6591 Q69.0938,411.0966 69.9688,411.3154 Q70.8438,411.5185 71.7813,411.5185 Q72.6406,411.5185 73.1875,411.3154 Q73.7344,411.0966 73.9844,410.7216 Q74.25,410.3466 74.25,409.831 Q74.25,409.3154 74.0313,408.9716 Q73.8281,408.6279 73.2344,408.2998 Q72.6563,407.9716 71.5625,407.581 Q70.7656,407.2685 70.1406,406.9404 Q69.5313,406.5966 69.1094,406.1435 Q68.6875,405.6748 68.4688,405.081 Q68.2656,404.4873 68.2656,403.7216 Q68.2656,402.6748 68.7969,401.9248 Q69.3438,401.1591 70.2813,400.7685 Q71.2188,400.3623 72.4063,400.3623 Q73.4531,400.3623 74.2969,400.5654 Q75.1563,400.7529 76.0938,401.1748 L75.4375,402.9873 Q74.5625,402.5966 73.8438,402.4248 Q73.1406,402.2373 72.375,402.2373 Q71.6719,402.2373 71.2188,402.4404 Q70.7813,402.6279 70.5625,402.9716 Q70.3438,403.2998 70.3438,403.7373 Q70.3438,404.2841 70.5625,404.6279 Q70.7813,404.9716 71.3125,405.2841 Q71.8594,405.581 72.8281,405.9404 Q73.9219,406.3466 74.6875,406.831 Q75.4688,407.2998 75.8906,407.9873 Q76.3125,408.6591 76.3125,409.6904 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="37" x="140.25" y="401.8281">«Type»</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="92.25" y="420.31">TrainResNetParams</text><line style="stroke:#181818;stroke-width:0.5;" x1="26.5" x2="258.5" y1="429.412" y2="429.412"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="31.5" y="448.378">inputsBatch : tf.Tensor4D</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="31.5" y="467.4459">policyOutputsBatch : tf.Tensor2D</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="31.5" y="486.5138">valueOutputsBatch : tf.Tensor2D</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="31.5" y="505.5817">batchSize : number</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="31.5" y="524.6496">numEpochs : number</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="31.5" y="543.7176">learningRate : number</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="31.5" y="562.7855">validationSplit : number</text></g><!--MD5=[3c8a72a24bb5d31a388073309c9b8a3c]
class MCTSParams--><g id="elem_MCTSParams"><rect codeLine="118" fill="#F1F1F1" height="91.5479" id="MCTSParams" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="214" x="391.5" y="61"/><ellipse cx="450.25" cy="83.706" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M454.8125,86.6904 Q454.8125,87.8623 454.2344,88.6904 Q453.6719,89.5185 452.625,89.956 Q451.5938,90.3779 450.2188,90.3779 Q449.5156,90.3779 448.875,90.2998 Q448.25,90.2373 447.7188,90.1123 Q447.1875,89.9716 446.6094,89.706 L446.6094,87.6591 Q447.5938,88.0966 448.4688,88.3154 Q449.3438,88.5185 450.2813,88.5185 Q451.1406,88.5185 451.6875,88.3154 Q452.2344,88.0966 452.4844,87.7216 Q452.75,87.3466 452.75,86.831 Q452.75,86.3154 452.5313,85.9716 Q452.3281,85.6279 451.7344,85.2998 Q451.1563,84.9716 450.0625,84.581 Q449.2656,84.2685 448.6406,83.9404 Q448.0313,83.5966 447.6094,83.1435 Q447.1875,82.6748 446.9688,82.081 Q446.7656,81.4873 446.7656,80.7216 Q446.7656,79.6748 447.2969,78.9248 Q447.8438,78.1591 448.7813,77.7685 Q449.7188,77.3623 450.9063,77.3623 Q451.9531,77.3623 452.7969,77.5654 Q453.6563,77.7529 454.5938,78.1748 L453.9375,79.9873 Q453.0625,79.5966 452.3438,79.4248 Q451.6406,79.2373 450.875,79.2373 Q450.1719,79.2373 449.7188,79.4404 Q449.2813,79.6279 449.0625,79.9716 Q448.8438,80.2998 448.8438,80.7373 Q448.8438,81.2841 449.0625,81.6279 Q449.2813,81.9716 449.8125,82.2841 Q450.3594,82.581 451.3281,82.9404 Q452.4219,83.3466 453.1875,83.831 Q453.9688,84.2998 454.3906,84.9873 Q454.8125,85.6591 454.8125,86.6904 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="37" x="496.25" y="78.8281">«Type»</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="470.75" y="97.31">MCTSParams</text><line style="stroke:#181818;stroke-width:0.5;" x1="392.5" x2="604.5" y1="106.412" y2="106.412"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="158" x="397.5" y="125.378">numSearches : number</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="202" x="397.5" y="144.4459">explorationConstant : number</text></g><!--MD5=[586e2e2f7500ef049f03706f6c2f1896]
class TrainMemoryBlock--><g id="elem_TrainMemoryBlock"><rect codeLine="123" fill="#F1F1F1" height="110.6158" id="TrainMemoryBlock" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="213" x="36" y="798"/><ellipse cx="76.2" cy="820.706" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M80.7625,823.6904 Q80.7625,824.8623 80.1844,825.6904 Q79.6219,826.5185 78.575,826.956 Q77.5438,827.3779 76.1688,827.3779 Q75.4656,827.3779 74.825,827.2998 Q74.2,827.2373 73.6688,827.1123 Q73.1375,826.9716 72.5594,826.706 L72.5594,824.6591 Q73.5438,825.0966 74.4188,825.3154 Q75.2938,825.5185 76.2313,825.5185 Q77.0906,825.5185 77.6375,825.3154 Q78.1844,825.0966 78.4344,824.7216 Q78.7,824.3466 78.7,823.831 Q78.7,823.3154 78.4813,822.9716 Q78.2781,822.6279 77.6844,822.2998 Q77.1063,821.9716 76.0125,821.581 Q75.2156,821.2685 74.5906,820.9404 Q73.9813,820.5966 73.5594,820.1435 Q73.1375,819.6748 72.9188,819.081 Q72.7156,818.4873 72.7156,817.7216 Q72.7156,816.6748 73.2469,815.9248 Q73.7938,815.1591 74.7313,814.7685 Q75.6688,814.3623 76.8563,814.3623 Q77.9031,814.3623 78.7469,814.5654 Q79.6063,814.7529 80.5438,815.1748 L79.8875,816.9873 Q79.0125,816.5966 78.2938,816.4248 Q77.5906,816.2373 76.825,816.2373 Q76.1219,816.2373 75.6688,816.4404 Q75.2313,816.6279 75.0125,816.9716 Q74.7938,817.2998 74.7938,817.7373 Q74.7938,818.2841 75.0125,818.6279 Q75.2313,818.9716 75.7625,819.2841 Q76.3094,819.581 77.2781,819.9404 Q78.3719,820.3466 79.1375,820.831 Q79.9188,821.2998 80.3406,821.9873 Q80.7625,822.6591 80.7625,823.6904 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="37" x="139.8" y="815.8281">«Type»</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="95.8" y="834.31">TrainMemoryBlock</text><line style="stroke:#181818;stroke-width:0.5;" x1="37" x2="248" y1="843.412" y2="843.412"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="42" y="862.378">encodedState : EncodedState</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="201" x="42" y="881.4459">actionProbabilities : number[]</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="42" y="900.5138">outcomeValue : number</text></g><!--MD5=[285bab8653443aa7067b56d6b0f58646]
class TrainAlphaZeroParams--><g id="elem_TrainAlphaZeroParams"><rect codeLine="129" fill="#F1F1F1" height="129.6837" id="TrainAlphaZeroParams" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="186" x="279.5" y="412.5"/><ellipse cx="294.5" cy="435.206" fill="#F1F1F1" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M299.0625,438.1904 Q299.0625,439.3623 298.4844,440.1904 Q297.9219,441.0185 296.875,441.456 Q295.8438,441.8779 294.4688,441.8779 Q293.7656,441.8779 293.125,441.7998 Q292.5,441.7373 291.9688,441.6123 Q291.4375,441.4716 290.8594,441.206 L290.8594,439.1591 Q291.8438,439.5966 292.7188,439.8154 Q293.5938,440.0185 294.5313,440.0185 Q295.3906,440.0185 295.9375,439.8154 Q296.4844,439.5966 296.7344,439.2216 Q297,438.8466 297,438.331 Q297,437.8154 296.7813,437.4716 Q296.5781,437.1279 295.9844,436.7998 Q295.4063,436.4716 294.3125,436.081 Q293.5156,435.7685 292.8906,435.4404 Q292.2813,435.0966 291.8594,434.6435 Q291.4375,434.1748 291.2188,433.581 Q291.0156,432.9873 291.0156,432.2216 Q291.0156,431.1748 291.5469,430.4248 Q292.0938,429.6591 293.0313,429.2685 Q293.9688,428.8623 295.1563,428.8623 Q296.2031,428.8623 297.0469,429.0654 Q297.9063,429.2529 298.8438,429.6748 L298.1875,431.4873 Q297.3125,431.0966 296.5938,430.9248 Q295.8906,430.7373 295.125,430.7373 Q294.4219,430.7373 293.9688,430.9404 Q293.5313,431.1279 293.3125,431.4716 Q293.0938,431.7998 293.0938,432.2373 Q293.0938,432.7841 293.3125,433.1279 Q293.5313,433.4716 294.0625,433.7841 Q294.6094,434.081 295.5781,434.4404 Q296.6719,434.8466 297.4375,435.331 Q298.2188,435.7998 298.6406,436.4873 Q299.0625,437.1591 299.0625,438.1904 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="37" x="367" y="430.3281">«Type»</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="308.5" y="448.81">TrainAlphaZeroParams</text><line style="stroke:#181818;stroke-width:0.5;" x1="280.5" x2="464.5" y1="457.912" y2="457.912"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="285.5" y="476.878">numIterations : number</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="131" x="285.5" y="495.9459">batchSize : number</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="285.5" y="515.0138">numEpochs : number</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="285.5" y="534.0817">learningRate : number</text></g><!--MD5=[5bc0a179d9ce7f83d81a7ada15ee6af5]
link MonteCarloTreeSearch to Game--><g id="link_MonteCarloTreeSearch_Game"><path codeLine="47" d="M1324.64,539.17 C1271.33,605.36 1186.05,711.26 1129.41,781.59 " fill="none" id="MonteCarloTreeSearch-to-Game" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1126.33,785.41,1135.0899,780.9084,1129.4657,781.5155,1128.8586,775.8913,1126.33,785.41" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="1188.5" y="715.897">Is represented by</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1274.702" y="562.0933">0..n</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1124.2052" y="774.7311">1</text></g><!--MD5=[f2baf05560c5df3e6b4089e96e65703e]
link AlphaZero to ResNet--><g id="link_AlphaZero_ResNet"><path codeLine="48" d="M1485.67,206.63 C1499.99,223.78 1512.95,242.44 1522.5,262 C1600.99,422.78 1611.38,635.52 1609.81,757.15 " fill="none" id="AlphaZero-to-ResNet" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1609.74,762.08,1613.8682,753.1381,1609.8114,757.0805,1605.869,753.0238,1609.74,762.08" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="29" x="1609.5" y="482.897">Uses</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1493.4053" y="229.1802">0..n</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1602.7841" y="751.6881">1</text></g><!--MD5=[d62e61f9ae25f21093d7501386a59dd1]
link MonteCarloTreeSearch to ResNet--><g id="link_MonteCarloTreeSearch_ResNet"><path codeLine="49" d="M1407.02,539.32 C1434.61,588.63 1475.26,659.6 1513.5,720 C1521.47,732.6 1530.09,745.7 1538.73,758.55 " fill="none" id="MonteCarloTreeSearch-to-ResNet" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1541.33,762.4,1539.6199,752.7007,1538.5368,758.253,1532.9846,757.1699,1541.33,762.4" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="29" x="1514.5" y="715.897">Uses</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1397.2423" y="562.3164">0..n</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1529.2288" y="751.7643">1</text></g><!--MD5=[7ecba90e1eedbe5922fbc5e00558983c]
link MonteCarloNode to Game--><g id="link_MonteCarloNode_Game"><path codeLine="71" d="M918.32,673.35 C951.23,712.05 983.81,750.36 1010.4,781.64 " fill="none" id="MonteCarloNode-to-Game" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1013.63,785.44,1010.8479,775.9923,1010.3913,781.6307,1004.7529,781.1741,1013.63,785.44" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="951.5" y="715.897">Is represented by</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="918.0568" y="695.3875">0..n</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1000.6274" y="774.7423">1</text></g><!--MD5=[fcc24f8d23be3327be997bb6cb0b55ed]
link MonteCarloNode to State--><g id="link_MonteCarloNode_State"><path codeLine="72" d="M645.69,673.35 C632.36,697.31 619.12,721.13 606.84,743.21 " fill="none" id="MonteCarloNode-to-State" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="604.47,747.47,612.3374,741.5452,606.8982,743.0992,605.3442,737.66,604.47,747.47" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="36" x="626.5" y="715.897">Keeps</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="608.7921" y="695.3875">0..n</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="601.1311" y="736.6295">1</text></g><!--MD5=[18fe90f3d633603fbe97c7a7dca51d2a]
link MonteCarloNode to MonteCarloNode--><g id="link_MonteCarloNode_MonteCarloNode"><path codeLine="73" d="M922.24,438.46 C948.56,444.45 966.5,457.79 966.5,478.5 C966.5,497.51 951.38,510.31 928.54,516.92 " fill="none" id="MonteCarloNode-to-MonteCarloNode" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="923.7,518.16,933.4118,519.7972,928.5431,516.9171,931.4232,512.0483,923.7,518.16" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="53" x="972.5" y="482.897">Is parent</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="930.4731" y="430.9506">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="930.4155" y="521.389">0..n</text></g><!--MD5=[3bb09308f63fe85ea29646f0f87e1c8d]
link AlphaZero to Game--><g id="link_AlphaZero_Game"><path codeLine="85" d="M1166.67,206.98 C1147.96,223.04 1131.28,241.32 1118.5,262 C1066.1,346.81 1066.07,641.5 1069.17,780.22 " fill="none" id="AlphaZero-to-Game" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1069.29,785.19,1073.0833,776.1009,1069.1757,780.1913,1065.0854,776.2838,1069.29,785.19" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="1119.5" y="482.897">Is represented by</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1084.6866" y="229.6286">0..n</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1061.6632" y="774.865">1</text></g><!--MD5=[893008df71a873e33deef98f8d21e968]
link AlphaZero to MonteCarloTreeSearch--><g id="link_AlphaZero_MonteCarloTreeSearch"><path codeLine="86" d="M1373.5,206.75 C1373.5,270.8 1373.5,352.56 1373.5,409.19 " fill="none" id="AlphaZero-to-MonteCarloTreeSearch" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1373.5,414.11,1377.5,405.11,1373.5,409.11,1369.5,405.11,1373.5,414.11" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="29" x="1374.5" y="249.897">Uses</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="21" x="1349.6875" y="229.334">0..n</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="1366.0516" y="403.5274">1</text></g><!--MD5=[3d48dc15270bb55b9136167cdb0f97c1]
link TypeDefinitions to Player--><!--MD5=[369d3b3cbaf62aacb3bfa7b243388fd0]
link Player to MCTSParams--><!--MD5=[91c653066d9ecb545a0fd15781257f11]
link MCTSParams to ActionOutcome--><!--MD5=[469b5b3a59a1714653ec927e949b3ab6]
link TrainResNetParams to TrainAlphaZeroParams--><!--MD5=[61eaf8e80728728c4a774dd14819fd8e]
link TypeDefinitions to TrainResNetParams--><!--MD5=[0b8ff094e6b32a2aa950d58358b07568]
link TrainResNetParams to TrainMemoryBlock--><!--MD5=[15e4a8cdb978eb69bb50f79c8a5d3d4f]
@startuml

    ' Config
    hide empty members
    skinparam nodesep 20
    skinparam ranksep 1

    ' Classes

    interface State {
        {abstract} +getValidActions() : boolean[]
        {abstract} +getPlayerAt(position: number) : Player | null
        {abstract} +getEncodedState() : EncodedState
        {abstract} +setPlayerAt(player: Player, position: number) : void
        {abstract} +print() : void
        {abstract} +checkWin(action: Action) : boolean
        {abstract} +performAction(action: Action, player: Player) : void
        {abstract} +changePerspective(currentPlayer: Player, opponentPlayer) : void
        {static} +clone(state: State) : State
    }

    interface Game {
        ' {abstract} +getRowCount() : number
        ' {abstract} +getColumnCount() : number
        {abstract} +getActionSize() : number
        {abstract} +getInitialState() : State
        {abstract} +getOpponent(player: Player): Player
        {abstract} +getOpponentValue(value: number): number
        {static} +getActionOutcome(state: State, action: Action | null): ActionOutcome
    }

    class ResNet {
        -model : tf.LayersModel
        +save(path: string) : void
        +summary() : void
        +dispose() : void
        -compile(learningRate: number) : void
        +train(trainResNetParams: TrainResNetParams) : void
        +predict(encodedState: tf.Tensor4D) : [tf.Tensor2D, tf.Tensor2D]
    }

    class MonteCarloTreeSearch {
        -game : Game
        -resNet : ResNet
        -params : MCTSParams
        +search(state: State) : number[]
    }
    MonteCarloTreeSearch "0..n" - -> "1" Game : Is represented by
    AlphaZero "0..n" - -> "1" ResNet : Uses
    MonteCarloTreeSearch "0..n" - -> "1" ResNet : Uses

    class MonteCarloNode {
        -game : Game
        -params : MCTSParams
        -state : State
        -actionTaken : Action | null
        -priorProbability : number
        -visitCount : number
        -valueSum : number
        -parent : MonteCarloNode | null
        -children : MonteCarloNode[]
        +getState() : State
        +getActionTaken() : Action | null
        +getChildren() : MonteCarloNode[]
        +getVisitCount() : number
        +isFullyExpanded() : boolean
        -getChildUcb(child: MonteCarloNode) : number
        +selectBestChild() : MonteCarloNode
        +expand(policy: number[]) : void
        +backpropagate(outcomeValue: number) : void
    }
    MonteCarloNode "0..n" - -> "1" Game : Is represented by
    MonteCarloNode "0..n" - -> "1" State : Keeps
    MonteCarloNode "1" - -> "0..n" MonteCarloNode : Is parent

    class AlphaZero {
        -game : Game
        -resNet : ResNet
        -mcts : MonteCarloTreeSearch
        -selfPlay() : TrainingMemory
        -transposeMemory() : {encodedStates: EncodedState[], policyTargets: number[], valueTargets: number[]}
        +buildTrainingMemory(numSelfPlayIterations: number) : TrainingMemory
        -train(memory: TrainingMemory, batchSize: number, numEpochs: number, learningRate: number) : tf.Logs[]
        +learn(directoryName: string, numSelfPlayIterations: number, trainModelParams: TrainModelParams, trainingMemoryArray: TrainingMemory[]) : void
    }
    AlphaZero "0..n" - -> "1" Game : Is represented by
    AlphaZero "0..n" - -> "1" MonteCarloTreeSearch : Uses


    ' Definitions
    annotation TypeDefinitions {
        EncodedState : number[][][]
        Action : number
        ValidAction : boolean
        TrainingMemory : TrainMemoryBlock[]
    }

    enum Player {
        None = 0
        X = 1
        O = -1
    }

    struct ActionOutcome <<Type>> {
        isTerminal : boolean
        outcomeValue : number
    }
    
    struct TrainResNetParams <<Type>> {
        inputsBatch : tf.Tensor4D
		policyOutputsBatch : tf.Tensor2D
		valueOutputsBatch : tf.Tensor2D
		batchSize : number
		numEpochs : number
		learningRate : number
		validationSplit : number
    }

    struct MCTSParams <<Type>> {
        numSearches : number
        explorationConstant : number
    }

    struct TrainMemoryBlock <<Type>> {
        encodedState : EncodedState
        actionProbabilities : number[]
        outcomeValue : number
    }

    struct TrainAlphaZeroParams <<Type>> {
        numIterations : number
		batchSize : number
		numEpochs : number
		learningRate : number
    }

    TypeDefinitions -[hidden]> Player
    Player -[hidden]> MCTSParams
    MCTSParams -[hidden]> ActionOutcome
    TrainResNetParams -[hidden]> TrainAlphaZeroParams
    TypeDefinitions -down[hidden]-> TrainResNetParams
    TrainResNetParams -down[hidden]-> TrainMemoryBlock

@enduml

@startuml

    hide empty members
    skinparam nodesep 20
    skinparam ranksep 1


    interface State {
        {abstract} +getValidActions() : boolean[]
        {abstract} +getPlayerAt(position: number) : Player | null
        {abstract} +getEncodedState() : EncodedState
        {abstract} +setPlayerAt(player: Player, position: number) : void
        {abstract} +print() : void
        {abstract} +checkWin(action: Action) : boolean
        {abstract} +performAction(action: Action, player: Player) : void
        {abstract} +changePerspective(currentPlayer: Player, opponentPlayer) : void
        {static} +clone(state: State) : State
    }

    interface Game {
        {abstract} +getActionSize() : number
        {abstract} +getInitialState() : State
        {abstract} +getOpponent(player: Player): Player
        {abstract} +getOpponentValue(value: number): number
        {static} +getActionOutcome(state: State, action: Action | null): ActionOutcome
    }

    class ResNet {
        -model : tf.LayersModel
        +save(path: string) : void
        +summary() : void
        +dispose() : void
        -compile(learningRate: number) : void
        +train(trainResNetParams: TrainResNetParams) : void
        +predict(encodedState: tf.Tensor4D) : [tf.Tensor2D, tf.Tensor2D]
    }

    class MonteCarloTreeSearch {
        -game : Game
        -resNet : ResNet
        -params : MCTSParams
        +search(state: State) : number[]
    }
    MonteCarloTreeSearch "0..n" - -> "1" Game : Is represented by
    AlphaZero "0..n" - -> "1" ResNet : Uses
    MonteCarloTreeSearch "0..n" - -> "1" ResNet : Uses

    class MonteCarloNode {
        -game : Game
        -params : MCTSParams
        -state : State
        -actionTaken : Action | null
        -priorProbability : number
        -visitCount : number
        -valueSum : number
        -parent : MonteCarloNode | null
        -children : MonteCarloNode[]
        +getState() : State
        +getActionTaken() : Action | null
        +getChildren() : MonteCarloNode[]
        +getVisitCount() : number
        +isFullyExpanded() : boolean
        -getChildUcb(child: MonteCarloNode) : number
        +selectBestChild() : MonteCarloNode
        +expand(policy: number[]) : void
        +backpropagate(outcomeValue: number) : void
    }
    MonteCarloNode "0..n" - -> "1" Game : Is represented by
    MonteCarloNode "0..n" - -> "1" State : Keeps
    MonteCarloNode "1" - -> "0..n" MonteCarloNode : Is parent

    class AlphaZero {
        -game : Game
        -resNet : ResNet
        -mcts : MonteCarloTreeSearch
        -selfPlay() : TrainingMemory
        -transposeMemory() : {encodedStates: EncodedState[], policyTargets: number[], valueTargets: number[]}
        +buildTrainingMemory(numSelfPlayIterations: number) : TrainingMemory
        -train(memory: TrainingMemory, batchSize: number, numEpochs: number, learningRate: number) : tf.Logs[]
        +learn(directoryName: string, numSelfPlayIterations: number, trainModelParams: TrainModelParams, trainingMemoryArray: TrainingMemory[]) : void
    }
    AlphaZero "0..n" - -> "1" Game : Is represented by
    AlphaZero "0..n" - -> "1" MonteCarloTreeSearch : Uses


    annotation TypeDefinitions {
        EncodedState : number[][][]
        Action : number
        ValidAction : boolean
        TrainingMemory : TrainMemoryBlock[]
    }

    enum Player {
        None = 0
        X = 1
        O = -1
    }

    struct ActionOutcome <<Type>> {
        isTerminal : boolean
        outcomeValue : number
    }
    
    struct TrainResNetParams <<Type>> {
        inputsBatch : tf.Tensor4D
		policyOutputsBatch : tf.Tensor2D
		valueOutputsBatch : tf.Tensor2D
		batchSize : number
		numEpochs : number
		learningRate : number
		validationSplit : number
    }

    struct MCTSParams <<Type>> {
        numSearches : number
        explorationConstant : number
    }

    struct TrainMemoryBlock <<Type>> {
        encodedState : EncodedState
        actionProbabilities : number[]
        outcomeValue : number
    }

    struct TrainAlphaZeroParams <<Type>> {
        numIterations : number
		batchSize : number
		numEpochs : number
		learningRate : number
    }

    TypeDefinitions -[hidden]> Player
    Player -[hidden]> MCTSParams
    MCTSParams -[hidden]> ActionOutcome
    TrainResNetParams -[hidden]> TrainAlphaZeroParams
    TypeDefinitions -down[hidden]-> TrainResNetParams
    TrainResNetParams -down[hidden]-> TrainMemoryBlock

@enduml

PlantUML version 1.2022.7(Mon Aug 22 14:01:30 BRT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>